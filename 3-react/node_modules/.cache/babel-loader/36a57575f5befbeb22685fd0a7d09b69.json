{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/prado/OneDrive/Escritorio/ADALAB/0-ejercicios-de-adalab-prado/3-react/0-en clase/modulo-3-leccion-04-listados-de-arrays/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/App.scss\";\nimport originalData from \"../data/tasks.json\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(originalData);\n  const [search, setSearch] = useState(\"\");\n  const [taskNew, setTaskNew] = useState(\"\");\n\n  const handleSearch = ev => {\n    setSearch(ev.currentTarget.value);\n  };\n\n  const handleTaskNew = ev => {\n    setTaskNew(ev.currentTarget.value);\n  };\n\n  const handleAddTask = ev => {\n    ev.preventDefault();\n    const newTaskObject = {\n      task: {\n        taskNew\n      },\n      completed: \"false\"\n    };\n  };\n\n  const handleForm = ev => {\n    ev.preventDefault();\n  };\n\n  const filteredData = data.filter(dataItem => dataItem.task.toLowerCase().includes(search.toLowerCase()));\n  const html = filteredData.map((dataItem, index) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: dataItem.completed ? \"completed\" : null,\n      children: dataItem.task\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleForm,\n      children: [\"Filtrar por:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleForm,\n      children: [\"A\\xF1adir Tarea:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        value: taskNew,\n        onChange: handleTaskNew\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"BOT\\xD3N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"T/tF9CQUQiAGJ3jXhY+k/7mPNrU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/prado/OneDrive/Escritorio/ADALAB/0-ejercicios-de-adalab-prado/3-react/0-en clase/modulo-3-leccion-04-listados-de-arrays/src/components/App.js"],"names":["originalData","useState","App","data","setData","search","setSearch","taskNew","setTaskNew","handleSearch","ev","currentTarget","value","handleTaskNew","handleAddTask","preventDefault","newTaskObject","task","completed","handleForm","filteredData","filter","dataItem","toLowerCase","includes","html","map","index"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAACD,YAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAIC,EAAD,IAAQ;AAC3BJ,IAAAA,SAAS,CAACI,EAAE,CAACC,aAAH,CAAiBC,KAAlB,CAAT;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIH,EAAD,IAAQ;AAC5BF,IAAAA,UAAU,CAACE,EAAE,CAACC,aAAH,CAAiBC,KAAlB,CAAV;AACD,GAFD;;AAIA,QAAME,aAAa,GAAIJ,EAAD,IAAQ;AAC5BA,IAAAA,EAAE,CAACK,cAAH;AACA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,IAAI,EAAE;AAAEV,QAAAA;AAAF,OADc;AAEpBW,MAAAA,SAAS,EAAE;AAFS,KAAtB;AAID,GAND;;AAOA,QAAMC,UAAU,GAAIT,EAAD,IAAQ;AACzBA,IAAAA,EAAE,CAACK,cAAH;AACD,GAFD;;AAIA,QAAMK,YAAY,GAAGjB,IAAI,CAACkB,MAAL,CAAaC,QAAD,IAC/BA,QAAQ,CAACL,IAAT,CAAcM,WAAd,GAA4BC,QAA5B,CAAqCnB,MAAM,CAACkB,WAAP,EAArC,CADmB,CAArB;AAIA,QAAME,IAAI,GAAGL,YAAY,CAACM,GAAb,CAAiB,CAACJ,QAAD,EAAWK,KAAX,KAAqB;AACjD,wBACE;AAAI,MAAA,SAAS,EAAEL,QAAQ,CAACJ,SAAT,GAAqB,WAArB,GAAmC,IAAlD;AAAA,gBACGI,QAAQ,CAACL;AADZ,OAA6DU,KAA7D;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GANY,CAAb;AAQA,sBACE;AAAA,4BACE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAER,UAA1B;AAAA,8CAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,EAFP;AAGE,QAAA,EAAE,EAAC,EAHL;AAIE,QAAA,KAAK,EAAEd,MAJT;AAKE,QAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,gBAAKgB;AAAL;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEN,UAA1B;AAAA,kDAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,EAFP;AAGE,QAAA,EAAE,EAAC,EAHL;AAIE,QAAA,KAAK,EAAEZ,OAJT;AAKE,QAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAQ,QAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA0BD;;GA9DQZ,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import \"../styles/App.scss\";\nimport originalData from \"../data/tasks.json\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [data, setData] = useState(originalData);\n  const [search, setSearch] = useState(\"\");\n  const [taskNew, setTaskNew] = useState(\"\");\n\n  const handleSearch = (ev) => {\n    setSearch(ev.currentTarget.value);\n  };\n\n  const handleTaskNew = (ev) => {\n    setTaskNew(ev.currentTarget.value);\n  };\n\n  const handleAddTask = (ev) => {\n    ev.preventDefault();\n    const newTaskObject = {\n      task: { taskNew },\n      completed: \"false\",\n    };\n  };\n  const handleForm = (ev) => {\n    ev.preventDefault();\n  };\n\n  const filteredData = data.filter((dataItem) =>\n    dataItem.task.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const html = filteredData.map((dataItem, index) => {\n    return (\n      <li className={dataItem.completed ? \"completed\" : null} key={index}>\n        {dataItem.task}\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleForm}>\n        Filtrar por:\n        <input\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          value={search}\n          onChange={handleSearch}\n        />\n      </form>\n      <ul>{html}</ul>\n      <form action=\"\" onSubmit={handleForm}>\n        Añadir Tarea:\n        <input\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          value={taskNew}\n          onChange={handleTaskNew}\n        />\n        <button onClick={handleAddTask}>BOTÓN</button>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}